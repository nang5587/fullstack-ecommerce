/* ================================================= */
/* 1. TailwindCSS 기본 지시문 (가장 위에 있어야 함)  */
/* ================================================= */
/* src/index.css (가장 단순하고 올바른 형태) */

/* 1. Tailwind의 스타일을 가져옵니다. */
@import "tailwindcss";


/* 햇살 효과 (Sunbeam Effect) */
.sunbeam-effect {
    /* 화면 상단 중앙에서 시작하는 방사형 그라데이션 */
    background: radial-gradient(ellipse at 50% -20%, 
        rgba(255, 255, 240, 0.4) 0%,  /* 시작: 따뜻한 빛 */
        rgba(255, 255, 255, 0) 70%   /* 끝: 투명 */
    );
}
/* 반짝이는 별 배경 */
/* @keyframes move-twink-back {
    from { background-position: 0 0; }
    to { background-position: -10000px 5000px; }
}

.stars {
    background: transparent url('/star.png') repeat top center;
    z-index: 1;
    animation: move-twink-back 200s linear infinite;
    background-size: 500px 500px;
} */
/* 'twinkling-stars.png' 이미지는 인터넷에서 쉽게 찾을 수 있습니다. */

/* 파도 패턴 및 애니메이션 */
@keyframes wave-flow {
    from { background-position-x: 0; }
    to { background-position-x: -1000px; } /* 패턴 이미지의 가로 길이 */
}

.bg-wave-pattern {
    background-image: url('/path/to/wave-pattern.svg');
    background-size: auto 100%;
    opacity: 0.2;
}
/* 'wave-pattern.svg'는 SVG 파도 생성기 등으로 만들 수 있습니다. */

.animate-wave-slow {
    animation: wave-flow 30s linear infinite;
}
/* ======================================== */
/* 스크롤바 hide */
/* ======================================== */
@layer utilities {
  /* Chrome, Safari, Opera */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  /* IE, Edge */
  .scrollbar-hide {
    -ms-overflow-style: none;  
    /* Firefox */
    scrollbar-width: none;  
  }
}
/* ======================================== */
.backface-hidden {
  backface-visibility: hidden;
}
.rotate-y-180 {
  transform: rotateY(180deg);
}
/* ======================================== */
/*  ✨ 커스텀 애니메이션 및 효과            */
/* ======================================== */

/* 1. 빛이 부드럽게 커졌다 작아지는 애니메이션 */
@keyframes pulse-light {
  0%, 100% {
    transform: scale(1);
    opacity: 0.15;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.25;
  }
}
.bg-radial-gradient-t {
  background-image: radial-gradient(ellipse at top, var(--tw-gradient-stops));
}

/* 아래쪽에서 퍼지는 원형 그라데이션 */
.bg-radial-gradient-b {
  background-image: radial-gradient(ellipse at bottom, var(--tw-gradient-stops));
}
.animate-pulse-light {
  animation: pulse-light 10s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* src/index.css (수정된 최종 버전) */
/* ================================================= */
/* ✨ [추가] react-datepicker 커스텀 스타일         */
/* ================================================= */

/* ================================================= */
/* ======================================== */
/*  1. 기본 DatePicker 스타일 (모든 달력 공통) */
/* ======================================== */

/* 전체 컨테이너 */
.react-datepicker {
  border: 1px solid #e5e7eb;
  border-radius: 1rem;
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
  padding: 0;
  overflow: hidden;
  box-shadow: 0 10px 25px -5px rgba(200, 160, 100, 0.2);
}


/* ================================================== */
/* 2. 시각화 전용 달력 스타일 (기존 스타일을 덮어씀)  */
/* ================================================== */

/* ⭐ 가장 중요한 부분: .react-datepicker 컨테이너의 너비 강제 적용 */
.react-datepicker.visual-only-calendar {
  width: 32rem !important; /* 캘린더 전체 너비 */
  padding: 0.8rem;
  box-sizing: border-box; /* 패딩 포함 너비 계산 */
  /* background-color: #fffbeb; */ /* 필요시 주석 해제 */
  /* border-color: var(--kalani-gold); */ /* 필요시 주석 해제 */
}

/* ⭐ 달력 내부의 월 컨테이너가 100% 너비를 사용하도록 강제 */
.visual-only-calendar .react-datepicker__month-container {
    width: 100% !important;
}

.visual-only-calendar .react-datepicker__month {
    width: 100% !important; /* 월 컨테이너도 100% 사용 */
    margin: 0; /* 기본 마진 제거 */
}

/* ✅ 헤더 색상도 기본값으로 복원 */
.visual-only-calendar .react-datepicker__header {
  /* background-color: #fef3c7; */ /* 삭제 */
  padding-bottom: 0.8rem;
}


/* ✅ 1. 요일 행과 주(week) 행 모두 가로 정렬(flex)을 적용 */
.visual-only-calendar .react-datepicker__day-names,
.visual-only-calendar .react-datepicker__week {
  display: flex;
  width: 100%; /* 부모(react-datepicker__month)의 공간을 채우도록 함 */
  justify-content: space-between; /* 양 끝에 붙고 나머지는 균등 분배 */
  /* align-items: stretch; */ /* 아이템 높이를 균등하게 맞춤, 필요시 주석 해제 */
}

/* ✅ 2. 요일 이름('일','월'...) 칸 스타일 */
.visual-only-calendar .react-datepicker__day-name {
  flex-grow: 1; /* ⭐ 남은 공간을 모두 채우도록 성장 */
  flex-basis: 0; /* ⭐ 최소 크기를 0으로 설정하여 flex-grow가 잘 작동하게 함 */
  text-align: center; /* 텍스트 중앙 정렬 */
  min-width: 0; /* 오버플로우 방지 */
  /* width: calc(100% / 7); */ /* flex-grow/basis와 함께 사용하면 충돌 가능성, 제거 */
  margin: 0 0.1rem; /* 양 옆에 미세한 마진 */
  height: 3.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
}

/* ✅ 3. 실제 날짜('1','2'...) 칸 스타일: 내부 콘텐츠를 세로 정렬 */
.visual-only-calendar .react-datepicker__day {
  flex-grow: 1; /* ⭐ 남은 공간을 모두 채우도록 성장 */
  flex-basis: 0; /* ⭐ 최소 크기를 0으로 설정하여 flex-grow가 잘 작동하게 함 */
  text-align: center; /* 텍스트 중앙 정렬 */
  min-width: 0; /* 오버플로우 방지 */
  /* width: calc(100% / 7); */ /* flex-grow/basis와 함께 사용하면 충돌 가능성, 제거 */
  margin: 0 0.1rem; /* 양 옆에 미세한 마진 */
  height: 3.5rem; /* 날짜 칸의 높이 */
  padding: 0.2rem; /* 내부 패딩 추가 */

  /* 칸 내부의 내용물(날짜, 금액)을 위한 Flexbox 설정 */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  line-height: 1.3; /* 세로 간격 조정 */
}


/* 날짜 숫자 폰트 크기 */
.visual-only-calendar .react-datepicker__day span {
  font-size: 0.9rem;
}

/* 금액 표시 텍스트 스타일 조정 */
.visual-only-calendar .daily-total {
  position: static;
  margin-top: 0.2rem;
  font-size: 0.75rem;
  color: #4b5563;
  font-weight: 600;
  text-align: center;
  word-break: break-word; /* 긴 단어도 줄바꿈되도록 */
  white-space: normal; /* 한 줄 강제 대신 일반적인 줄바꿈 허용 */
  max-width: 100%; /* 부모 요소의 너비를 넘지 않도록 */
}


/* --- 아래 기능 비활성화 스타일은 그대로 유지합니다 --- */

.visual-only-calendar .react-datepicker__day {
  cursor: default;
  pointer-events: none; /* 모든 마우스 이벤트 무시 */
}
.visual-only-calendar .react-datepicker__day:hover {
  background-color: transparent !important;
  transform: none !important;
  border-color: transparent !important;
}
.visual-only-calendar .react-datepicker__day--selected,
.visual-only-calendar .react-datepicker__day--in-range,
.visual-only-calendar .react-datepicker__day--keyboard-selected {
  background-color: transparent !important;
  color: inherit !important;
  transform: none !important;
  border-color: transparent !important;
}
/* 1. 기본 초록색 하이라이트 스타일을 완전히 비활성화합니다. */
.visual-only-calendar .react-datepicker__day--highlighted {
  color: goldenrod !important;
  background-color: white;
}

/* 3. ✅ 금액 텍스트 색상도 이 커스텀 클래스를 기준으로 다시 설정합니다. */
.visual-only-calendar .react-datepicker__day--highlighted-has-total-amount .daily-total {
    color: goldenrod !important;
}

/* ================================================= */
/* 2. 배경 문제 해결을 위한 핵심 코드            */
/* ================================================= */
body {
  /* body의 기본 배경색을 투명하게 만들어 뒤에 있는 배경이 보이게 함 */
  background-color: transparent !important;
}

/* ================================================== */
/* 3. Swiper 및 커스텀 애니메이션                   */
/* ================================================== */

/* Swiper 투명도 효과 */
.mySwiper .swiper-slide {
  transition: opacity 0.3s ease-in-out;
  opacity: 0.7;
}

.mySwiper .swiper-slide-active {
  opacity: 1;
}

/* 회전하는 태양 애니메이션 */
@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 60s linear infinite;
}

/* 물결 애니메이션 (Keyframes) */
@keyframes wave-flow {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(-50%);
  }
}

.animate-wave-slow {
  animation: wave-flow 30s linear infinite;
}

.animate-wave-medium {
  animation: wave-flow 20s linear infinite reverse;
}

.animate-wave-fast {
  animation: wave-flow 15s linear infinite;
}


/* ================================================== */
/* 4. 위시리스트 및 기타 페이지 효과                */
/* ================================================== */

.bg-radial-gradient-t {
  background-image: radial-gradient(ellipse at top, rgba(75, 108, 193, 0.2), transparent 70%);
}

.with-palm-leaves {
  position: relative;
  z-index: 0;
}

.with-palm-leaves::before {
  content: '';
  position: absolute;
  top: -150px;
  left: -200px;
  width: 600px;
  height: 600px;
  background-image: url('/wishImgs/josh.png');
  background-size: contain;
  background-repeat: no-repeat;
  rotate: 50deg;
  transform: rotate(-20deg);
  filter: brightness(0);
  z-index: 5;
  pointer-events: none;
  transition: transform 0.5s ease-out, opacity 0.5s ease-out;
}

.with-palm-leaves::after {
  content: '';
  position: absolute;
  bottom: 50px;
  right: -250px;
  width: 700px;
  height: 700px;
  background-image: url('/wishImgs/josh.png');
  background-size: contain;
  background-repeat: no-repeat;
  filter: brightness(0);
  z-index: 5;
  pointer-events: none;
  transition: transform 0.5s ease-out, opacity 0.5s ease-out;
}

.with-palm-leaves:hover::before,
.with-palm-leaves:hover::after {
  transform: scale(1.08);
}


/* ================================================= */
/* 5. KALANI 커스텀 유틸리티 클래스                 */
/* ================================================= */

.react-datepicker__header {
  background-color: white !important;
}

.hover\:bg-kalani-gold-20:hover {
  @apply bg-[var(--kalani-coastal-gold)]/20;
}

.bg-kalani-creme {
  @apply bg-[var(--kalani-coastal-creme)];
}

.bg-kalani-stone {
  @apply bg-[var(--kalani-coastal-stone)];
}

.bg-kalani-mist {
  @apply bg-[var(--kalani-coastal-mist)];
}

.bg-kalani-ash {
  @apply bg-[var(--kalani-coastal-ash)];
}

.bg-kalani-shell {
  @apply bg-[var(--kalani-coastal-shell)];
}

.bg-kalani-navy {
  @apply bg-[var(--kalani-coastal-navy)];
}

.bg-kalani-gold {
  @apply bg-[var(--kalani-coastal-gold)];
}

.bg-kalani-beige {
  @apply bg-[var(--kalani-coastal-beige)];
}

.bg-kalani-beige-70 {
  @apply bg-[var(--kalani-coastal-beige)]/70;
}

.text-kalani-error {
  @apply text-[var(--kalani-coastal-error)];
}

.text-kalani-success {
  @apply text-[var(--kalani-coastal-success)];
}

.text-kalani-creme {
  @apply text-[var(--kalani-coastal-creme)];
}

.text-kalani-ash {
  @apply text-[var(--kalani-coastal-ash)];
}

.text-kalani-taupe {
  @apply text-[var(--kalani-coastal-taupe)];
}

.text-kalani-gold {
  @apply text-[var(--kalani-coastal-gold)];
}

.text-kalani-navy {
  @apply text-[var(--kalani-coastal-navy)];
}

.border-kalani-stone {
  @apply border-[var(--kalani-coastal-stone)];
}

.hover\:bg-kalani-ash:hover {
  @apply bg-[var(--kalani-coastal-ash)];
}

.hover\:bg-kalani-gold:hover {
  @apply bg-[var(--kalani-coastal-gold)];
}

.hover\:text-kalani-ash:hover {
  @apply text-[var(--kalani-coastal-ash)];
}

.hover\:text-kalani-gold:hover {
  @apply text-[var(--kalani-coastal-gold)];
}

.hover\:text-kalani-beige:hover {
  @apply text-[var(--kalani-coastal-beige)];
}

.hover\:text-kalani-navy:hover {
  @apply text-[var(--kalani-coastal-navy)];
}

.focus-within\:outline-kalani-navy:focus-within {
  @apply outline-[var(--kalani-coastal-navy)];
}

.focus-within\:outline-kalani-gold:focus-within {
  @apply outline-[var(--kalani-coastal-gold)];
}

.focus\:ring-offset-kalani-creme:focus {
  --tw-ring-offset-color: var(--kalani-coastal-creme);
}

.focus\:ring-kalani-gold:focus {
  --tw-ring-color: var(--kalani-coastal-gold);
}

.dropdown-menu {
  @apply relative;
}

.dropdown-menu::before {
  content: '';
  position: absolute;
  bottom: 100%;
  right: 1.5rem;
  transform: translateX(50%);
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-bottom: 8px solid white;
}

.img-hovered {
  transform: scale(1.08);
  will-change: transform;
  z-index: 10;
  transition: transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
}

.img-normal {
  transform: scale(1);
  transition: transform 1s cubic-bezier(0.25, 0, 0.25, 1);
}

@keyframes jelly {
  0% {
    transform: scale(1, 1);
  }

  25% {
    transform: scale(1.1, 0.9);
  }

  50% {
    transform: scale(0.9, 1.1);
  }

  75% {
    transform: scale(1.05, 0.95);
  }

  100% {
    transform: scale(1, 1);
  }
}

.shadow-nm,
.shadow-lg {
  transition: box-shadow 0.3s ease, transform 0.3s ease;
  border-radius: 12px;
}

.shadow-nm {
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
}

.shadow-kal {
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.shadow-lg {
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);
}

.hover-scale-image {
  @apply transition-transform duration-300 ease-in-out hover:scale-105;
}

.lookbook-image {
  width: 100%;
  max-width: 400px;
  transition: width 0.3s ease;
}

@media (min-width: 1280px) {
  .lookbook-image {
    width: 400px;
  }
}